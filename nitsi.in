#!/usr/bin/python3

from nitsi.test import test
import logging

logger = logging.getLogger("nitsi")
logger.setLevel(logging.DEBUG)
# create file handler which logs even debug messages
fh = logging.FileHandler('nitsi.log')
fh.setLevel(logging.DEBUG)
# create console handler with a higher log level
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)

formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
fh.setFormatter(formatter)
ch.setFormatter(formatter)
# add the handlers to the logger
logger.addHandler(fh)
logger.addHandler(ch)

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser()

    parser.add_argument("-d", "--directory", dest="dir")

    args = parser.parse_args()

    currenttest = test(args.dir)
    currenttest.read_settings()
    currenttest.virtual_environ_setup()
    currenttest.load_recipe()
    try:
        currenttest.virtual_environ_start()
        currenttest.run_recipe()
    except BaseException as e:
        print(e)
    finally:
        currenttest.virtual_environ_stop()